name: Deploy Database

on:
  push:
    branches: [ "main" ]

jobs:
  # 1) Development Deployment
  dev-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Install SQL Server Tools (sqlcmd)
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg2 apt-transport-https
          curl -fsSL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /usr/share/keyrings/microsoft-prod.gpg > /dev/null
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft-prod.gpg] https://packages.microsoft.com/ubuntu/24.04/prod noble main" | sudo tee /etc/apt/sources.list.d/mssql-tools.list
          sudo apt-get update
          sudo apt-get install -y mssql-tools18 unixodbc-dev

      - name: Run T-SQL script on Development
        run: |
          export PATH="$PATH:/opt/mssql-tools18/bin"
          sqlcmd -S ${{ secrets.SECRET_DB_HOST_DEV }} \
                 -U ${{ secrets.SECRET_DB_USER_DEV }} \
                 -P ${{ secrets.SECRET_DB_PASS_DEV }} \
                 -i init_database.sql \
                 -N -C

  # 2) Production Deployment - waits for dev-deployment to finish
  prod-deployment:
    needs: [ dev-deployment ]
    runs-on: ubuntu-latest
    # Optional: Use GitHub environment protection rules for production
    # environment:
    #   name: production
    steps:
      - name: Wait for Approval
        uses: fjogeleit/approval-action@v1.0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out repo
        uses: actions/checkout@v3

      - name: Install SQL Server Tools (sqlcmd)
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg2 apt-transport-https
          curl -fsSL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /usr/share/keyrings/microsoft-prod.gpg > /dev/null
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft-prod.gpg] https://packages.microsoft.com/ubuntu/24.04/prod noble main" | sudo tee /etc/apt/sources.list.d/mssql-tools.list
          sudo apt-get update
          sudo apt-get install -y mssql-tools18 unixodbc-dev

      - name: Run T-SQL script on Production
        run: |
          export PATH="$PATH:/opt/mssql-tools18/bin"
          sqlcmd -S ${{ secrets.SECRET_DB_HOST_PROD }} \
                 -U ${{ secrets.SECRET_DB_USER_PROD }} \
                 -P ${{ secrets.SECRET_DB_PASS_PROD }} \
                 -i init_database.sql \
                 -N -C
                 
